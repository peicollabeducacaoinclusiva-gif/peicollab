#!/bin/bash

# Script de setup para produÃ§Ã£o - PEI Collab V2.1
# Execute: chmod +x scripts/setup-production.sh && ./scripts/setup-production.sh

set -e

echo "ðŸš€ PEI Collab V2.1 - Setup de ProduÃ§Ã£o"
echo "======================================"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# FunÃ§Ã£o para log colorido
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar se estamos no diretÃ³rio correto
if [ ! -f "package.json" ]; then
    error "Execute este script na raiz do projeto PEI Collab"
    exit 1
fi

log "Verificando dependÃªncias..."

# Verificar Node.js
if ! command -v node &> /dev/null; then
    error "Node.js nÃ£o encontrado. Instale Node.js 18+ primeiro."
    exit 1
fi

# Verificar npm
if ! command -v npm &> /dev/null; then
    error "npm nÃ£o encontrado. Instale npm primeiro."
    exit 1
fi

# Verificar Supabase CLI
if ! command -v supabase &> /dev/null; then
    warn "Supabase CLI nÃ£o encontrado. Instalando..."
    npm install -g supabase
fi

log "Instalando dependÃªncias do projeto..."
npm install

log "Instalando dependÃªncias de desenvolvimento..."
npm install --save-dev web-push

log "Verificando configuraÃ§Ã£o do Supabase..."
if [ ! -f "supabase/config.toml" ]; then
    error "Arquivo supabase/config.toml nÃ£o encontrado"
    exit 1
fi

log "Aplicando migraÃ§Ãµes do banco de dados..."
supabase db reset --linked

log "Executando testes de integraÃ§Ã£o..."
npm run test:integration || warn "Alguns testes falharam - verifique manualmente"

log "Gerando VAPID keys para notificaÃ§Ãµes push..."
node scripts/generate-vapid-keys.js

log "Configurando variÃ¡veis de ambiente..."
if [ ! -f ".env.local" ]; then
    log "Criando arquivo .env.local..."
    cat > .env.local << EOF
# PEI Collab V2.1 - ConfiguraÃ§Ãµes de ProduÃ§Ã£o
VITE_SUPABASE_URL=your_supabase_url_here
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here
VITE_VAPID_PUBLIC_KEY=your_vapid_public_key_here
SUPABASE_VAPID_PRIVATE_KEY=your_vapid_private_key_here

# ConfiguraÃ§Ãµes de Performance
VITE_ENABLE_OFFLINE_MODE=true
VITE_ENABLE_PUSH_NOTIFICATIONS=true
VITE_ENABLE_PERFORMANCE_MONITORING=true

# ConfiguraÃ§Ãµes de Debug (apenas para desenvolvimento)
VITE_ENABLE_DEBUG_TOOLS=false
VITE_ENABLE_DATABASE_TESTS=false
EOF
    warn "Configure as variÃ¡veis no arquivo .env.local"
fi

log "Construindo aplicaÃ§Ã£o para produÃ§Ã£o..."
npm run build

log "Verificando build..."
if [ ! -d "dist" ]; then
    error "Build falhou - diretÃ³rio dist nÃ£o encontrado"
    exit 1
fi

log "Executando verificaÃ§Ãµes de seguranÃ§a..."
npm audit --audit-level moderate || warn "Vulnerabilidades encontradas - revise manualmente"

log "Gerando relatÃ³rio de performance..."
npm run build:analyze || warn "AnÃ¡lise de bundle nÃ£o disponÃ­vel"

echo ""
echo "âœ… Setup de produÃ§Ã£o concluÃ­do!"
echo ""
echo "ðŸ“‹ PrÃ³ximos passos:"
echo "1. Configure as variÃ¡veis no arquivo .env.local"
echo "2. Configure as VAPID keys no Supabase Dashboard"
echo "3. Execute: npm run preview para testar localmente"
echo "4. FaÃ§a deploy para seu provedor de hospedagem"
echo ""
echo "ðŸ”§ Comandos Ãºteis:"
echo "â€¢ npm run dev          - Desenvolvimento"
echo "â€¢ npm run build        - Build para produÃ§Ã£o"
echo "â€¢ npm run preview      - Preview do build"
echo "â€¢ npm run test         - Executar testes"
echo "â€¢ supabase db reset    - Resetar banco de dados"
echo ""
echo "ðŸ“š DocumentaÃ§Ã£o:"
echo "â€¢ README.md           - DocumentaÃ§Ã£o principal"
echo "â€¢ docs/deployment.md  - Guia de deployment"
echo "â€¢ docs/troubleshooting.md - SoluÃ§Ã£o de problemas"
echo ""


