import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { FileText, GraduationCap, Brain } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface PEITemplate {
  id: string;
  name: string;
  schoolLevel: string;
  condition: string;
  diagnosisData: any;
  planningData: any;
  referralsData: any;
}

interface PEITemplateSelectorProps {
  onTemplateSelect: (template: PEITemplate) => void;
}

const templates: PEITemplate[] = [
  // Educação Infantil
  {
    id: "ei-tea",
    name: "Educação Infantil - TEA",
    schoolLevel: "Educação Infantil",
    condition: "TEA",
    diagnosisData: {
      interests: "Interesse por atividades sensoriais, brinquedos com texturas variadas, músicas infantis.",
      specialNeeds: "Transtorno do Espectro Autista (TEA) - Necessita de rotina estruturada, comunicação visual, apoio para interação social.",
      barriers: {
        comunicacional: ["Dificuldade na comunicação verbal", "Necessita de apoio visual (PECS, gestos)"],
        atitudinal: ["Resistência a mudanças de rotina", "Necessita de tempo para adaptação"],
        pedagogica: ["Dificuldade em atividades coletivas", "Necessita de atividades individualizadas"],
      },
      otherBarrier: "",
      history: "Criança de 4 anos com diagnóstico de TEA. Apresenta dificuldade na comunicação verbal e preferência por atividades solitárias. Família busca inclusão e desenvolvimento de habilidades sociais."
    },
    planningData: {
      goals: [
        {
          description: "Desenvolver comunicação funcional",
          strategies: ["Uso de comunicação alternativa (PECS)", "Rotina visual diária", "Atividades de expressão com apoio visual"],
          evaluationCriteria: "Consegue comunicar necessidades básicas usando 5 figuras do PECS",
          resources: "Material PECS, quadro de rotina visual, brinquedos sensoriais"
        },
        {
          description: "Ampliar tempo de interação social",
          strategies: ["Brincadeiras pareadas com mediação", "Jogos cooperativos simples", "Círculo de conversa adaptado"],
          evaluationCriteria: "Participa de atividades em grupo por pelo menos 10 minutos com mediação",
          resources: "Brinquedos de interesse da criança, jogos adaptados"
        }
      ]
    },
    referralsData: {
      referrals: ["Psicólogo", "Fonoaudiólogo", "Terapeuta Ocupacional"],
      otherReferral: "",
      observations: "Importante manter comunicação constante com a família e profissionais da saúde. Registrar progressos semanalmente."
    }
  },
  {
    id: "ei-di",
    name: "Educação Infantil - DI",
    schoolLevel: "Educação Infantil",
    condition: "Deficiência Intelectual",
    diagnosisData: {
      interests: "Interesse por jogos de encaixe, atividades musicais, brincadeiras ao ar livre.",
      specialNeeds: "Deficiência Intelectual (DI) - Necessita de atividades adaptadas ao ritmo de aprendizagem, apoio individualizado.",
      barriers: {
        pedagogica: ["Ritmo de aprendizagem diferenciado", "Dificuldade em conceitos abstratos"],
        metodologica: ["Necessita de metodologias concretas e lúdicas", "Repetição e reforço constante"],
      },
      otherBarrier: "",
      history: "Criança de 5 anos com DI. Apresenta desenvolvimento global mais lento, mas participa bem de atividades práticas e lúdicas."
    },
    planningData: {
      goals: [
        {
          description: "Desenvolver autonomia nas atividades diárias",
          strategies: ["Rotina visual estruturada", "Ensino passo a passo", "Reforço positivo constante"],
          evaluationCriteria: "Realiza 3 atividades de rotina (lavar mãos, guardar material, fazer lanche) com mínima supervisão",
          resources: "Quadro de rotina, materiais de higiene adaptados"
        }
      ]
    },
    referralsData: {
      referrals: ["Psicólogo", "Neuropsicólogo"],
      otherReferral: "",
      observations: "Estimular autonomia e independência. Valorizar pequenos progressos."
    }
  },
  // Ensino Fundamental
  {
    id: "ef-tdah",
    name: "Ensino Fundamental - TDAH",
    schoolLevel: "Ensino Fundamental",
    condition: "TDAH",
    diagnosisData: {
      interests: "Interesse por esportes, jogos interativos, atividades práticas.",
      specialNeeds: "Transtorno de Déficit de Atenção e Hiperatividade (TDAH) - Dificuldade de concentração, impulsividade, necessita de estratégias organizacionais.",
      barriers: {
        pedagogica: ["Dificuldade em manter atenção prolongada", "Necessita de pausas frequentes"],
        metodologica: ["Beneficia-se de atividades dinâmicas", "Necessita de organização visual"],
        atitudinal: ["Impulsividade afeta relações sociais", "Necessita de mediação em conflitos"],
      },
      otherBarrier: "",
      history: "Aluno de 8 anos com diagnóstico de TDAH. Apresenta dificuldade de concentração e organização, mas é criativo e gosta de atividades práticas."
    },
    planningData: {
      goals: [
        {
          description: "Aumentar tempo de concentração nas atividades",
          strategies: ["Quebrar tarefas em etapas menores", "Uso de timer visual", "Pausas programadas a cada 15 minutos"],
          evaluationCriteria: "Consegue completar atividades de 20 minutos com até 2 pausas",
          resources: "Timer visual, checklist de tarefas, fidget toys"
        },
        {
          description: "Desenvolver organização pessoal",
          strategies: ["Agenda visual", "Checklist diário", "Sistema de cores para materiais"],
          evaluationCriteria: "Utiliza agenda e organiza material com supervisão mínima",
          resources: "Agenda escolar, etiquetas coloridas, organizadores"
        }
      ]
    },
    referralsData: {
      referrals: ["Psicólogo", "Neurologista", "Psicopedagogo"],
      otherReferral: "",
      observations: "Importante trabalhar autoestima e autorregulação emocional. Manter família informada sobre estratégias."
    }
  },
  {
    id: "ef-dislexia",
    name: "Ensino Fundamental - Dislexia",
    schoolLevel: "Ensino Fundamental",
    condition: "Dislexia",
    diagnosisData: {
      interests: "Interesse por histórias, atividades artísticas, aulas práticas.",
      specialNeeds: "Dislexia - Dificuldade específica na leitura e escrita, necessita de apoio e metodologias diferenciadas.",
      barriers: {
        pedagogica: ["Dificuldade na decodificação de palavras", "Lentidão na leitura"],
        metodologica: ["Beneficia-se de material audiovisual", "Necessita de mais tempo para leitura"],
        tecnologica: ["Pode utilizar ferramentas de apoio (áudio livros, leitores de tela)"],
      },
      otherBarrier: "",
      history: "Aluno de 10 anos com diagnóstico de dislexia. Inteligente e criativo, mas enfrenta grandes dificuldades na leitura e escrita."
    },
    planningData: {
      goals: [
        {
          description: "Melhorar fluência de leitura",
          strategies: ["Leitura compartilhada", "Uso de régua de leitura", "Textos com fonte adaptada (OpenDyslexic)"],
          evaluationCriteria: "Lê textos curtos com menos erros e maior fluência",
          resources: "Régua de leitura, textos adaptados, audiolivros"
        },
        {
          description: "Fortalecer autoestima acadêmica",
          strategies: ["Valorizar produções orais", "Permitir avaliações alternativas", "Destacar pontos fortes"],
          evaluationCriteria: "Participa ativamente demonstrando confiança em suas capacidades",
          resources: "Reconhecimento verbal, certificados de progresso"
        }
      ]
    },
    referralsData: {
      referrals: ["Psicopedagogo", "Fonoaudiólogo"],
      otherReferral: "",
      observations: "Não confundir dificuldade de leitura com falta de inteligência. Estimular outras formas de expressão."
    }
  },
  // Ensino Médio
  {
    id: "em-altas-habilidades",
    name: "Ensino Médio - Altas Habilidades",
    schoolLevel: "Ensino Médio",
    condition: "Altas Habilidades",
    diagnosisData: {
      interests: "Interesse por temas científicos, debates, pesquisas acadêmicas, projetos complexos.",
      specialNeeds: "Altas Habilidades/Superdotação - Necessita de enriquecimento curricular, desafios intelectuais, projetos diferenciados.",
      barriers: {
        pedagogica: ["Ritmo de aprendizagem acelerado", "Necessita de aprofundamento"],
        metodologica: ["Currículo regular pode ser insuficiente", "Necessita de projetos desafiadores"],
      },
      otherBarrier: "",
      history: "Estudante de 16 anos com altas habilidades em ciências exatas. Demonstra facilidade acima da média e busca por desafios."
    },
    planningData: {
      goals: [
        {
          description: "Proporcionar enriquecimento curricular",
          strategies: ["Projetos de pesquisa avançados", "Mentoria com professores universitários", "Participação em olimpíadas científicas"],
          evaluationCriteria: "Desenvolve projeto de pesquisa e apresenta resultados",
          resources: "Material bibliográfico avançado, laboratórios, orientação especializada"
        }
      ]
    },
    referralsData: {
      referrals: ["Psicólogo"],
      otherReferral: "Mentoria acadêmica em universidades",
      observations: "Importante trabalhar aspectos socioemocionais e evitar isolamento."
    }
  },
];

export function PEITemplateSelector({ onTemplateSelect }: PEITemplateSelectorProps) {
  const { toast } = useToast();
  const [open, setOpen] = useState(false);
  const [selectedLevel, setSelectedLevel] = useState<string | null>(null);

  const levels = ["Educação Infantil", "Ensino Fundamental", "Ensino Médio"];
  const conditions = ["TEA", "TDAH", "DI", "Dislexia", "Altas Habilidades", "DA", "DV", "DF", "TOD"];

  const handleTemplateSelect = (template: PEITemplate) => {
    onTemplateSelect(template);
    setOpen(false);
    toast({
      title: "Modelo aplicado!",
      description: `O modelo "${template.name}" foi carregado. Você pode editá-lo conforme necessário.`,
    });
  };

  const filteredTemplates = selectedLevel
    ? templates.filter(t => t.schoolLevel === selectedLevel)
    : templates;

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        <Button variant="outline" className="w-full md:w-auto">
          <FileText className="mr-2 h-4 w-4" />
          Usar Modelo Pré-preenchido
        </Button>
      </DialogTrigger>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <FileText className="h-5 w-5" />
            Modelos de PEI Pré-preenchidos
          </DialogTitle>
          <DialogDescription>
            Selecione um modelo baseado no nível de escolaridade e necessidade específica do aluno.
            Você poderá editar todas as informações após carregar o modelo.
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6">
          {/* Filtro por nível de escolaridade */}
          <div>
            <h3 className="text-sm font-semibold mb-3 flex items-center gap-2">
              <GraduationCap className="h-4 w-4" />
              Nível de Escolaridade
            </h3>
            <div className="flex flex-wrap gap-2">
              <Button
                size="sm"
                variant={selectedLevel === null ? "default" : "outline"}
                onClick={() => setSelectedLevel(null)}
              >
                Todos
              </Button>
              {levels.map((level) => (
                <Button
                  key={level}
                  size="sm"
                  variant={selectedLevel === level ? "default" : "outline"}
                  onClick={() => setSelectedLevel(level)}
                >
                  {level}
                </Button>
              ))}
            </div>
          </div>

          {/* Lista de templates */}
          <div>
            <h3 className="text-sm font-semibold mb-3 flex items-center gap-2">
              <Brain className="h-4 w-4" />
              Modelos Disponíveis ({filteredTemplates.length})
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {filteredTemplates.map((template) => (
                <Card
                  key={template.id}
                  className="cursor-pointer hover:shadow-lg transition-shadow"
                  onClick={() => handleTemplateSelect(template)}
                >
                  <CardHeader>
                    <div className="flex items-start justify-between">
                      <div className="space-y-1">
                        <CardTitle className="text-base">{template.name}</CardTitle>
                        <CardDescription className="text-xs">
                          {template.schoolLevel}
                        </CardDescription>
                      </div>
                      <Badge variant="secondary">{template.condition}</Badge>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <div className="text-xs text-muted-foreground space-y-1">
                      <p>
                        <strong>Inclui:</strong>
                      </p>
                      <ul className="list-disc list-inside space-y-0.5 ml-2">
                        <li>Diagnóstico pré-preenchido</li>
                        <li>{template.planningData.goals.length} meta(s) de planejamento</li>
                        <li>Encaminhamentos sugeridos</li>
                      </ul>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>

          {filteredTemplates.length === 0 && (
            <div className="text-center py-8 text-muted-foreground">
              <p>Nenhum modelo disponível para este filtro.</p>
            </div>
          )}
        </div>
      </DialogContent>
    </Dialog>
  );
}
